unit keyboard;
interface
uses Dos,Crt;
const KEYBOARDPORT = $60;
      KEYBOARDINTR = 9;
var Key_esc:boolean;
    Key_F1:boolean;
    Key_F2:boolean;
    Key_F3:boolean;
    Key_F4:boolean;
    Key_F5:boolean;
    Key_F6:boolean;
    Key_F7:boolean;
    Key_F8:boolean;
    Key_F9:boolean;
    Key_F10:boolean;
    Key_F11:boolean;
    Key_F12:boolean;
    Key_A:boolean;
    Key_B:boolean;
    Key_C:boolean;
    Key_D:boolean;
    Key_E:boolean;
    Key_F:boolean;
    Key_G:boolean;
    Key_H:boolean;
    Key_I:boolean;
    Key_J:boolean;
    Key_K:boolean;
    Key_L:boolean;
    Key_M:boolean;
    Key_N:boolean;
    Key_O:boolean;
    Key_P:boolean;
    Key_Q:boolean;
    Key_R:boolean;
    Key_S:boolean;
    Key_T:boolean;
    Key_U:boolean;
    Key_V:boolean;
    Key_W:boolean;
    Key_X:boolean;
    Key_Y:boolean;
    Key_Z:boolean;
    Key_0:boolean;
    Key_1:boolean;
    Key_2:boolean;
    Key_3:boolean;
    Key_4:boolean;
    Key_5:boolean;
    Key_6:boolean;
    Key_7:boolean;
    Key_8:boolean;
    Key_9:boolean;
    Key_spacebar:boolean;
    Key_leftalt:boolean;
    Key_rightalt:boolean;
    Key_leftctrl:boolean;
    Key_rightctrl:boolean;
    Key_backspace:boolean;
    Key_left:boolean;
    Key_right:boolean;
    Key_up:boolean;
    Key_down:boolean;
    Key_minusunderscore:boolean;
    Key_equalplus:boolean;
    Key_tab:boolean;
    Key_leftbrace:boolean;
    Key_rightbrace:boolean;
    Key_leftshift:boolean;
    Key_rightshift:boolean;
    Key_leftaccolade:boolean;
    Key_rightaccolade:boolean;
    Key_enter:boolean;
    Key_twopoints:boolean;
    Key_quote:boolean;
    Key_tilde:boolean;
    Key_period:boolean;
    Key_comma:boolean;
    Key_slash:boolean;
    Key_capslock:boolean;
    Key_numlock:boolean;
    Key_scrolllock:boolean;
    Pad_Mul:boolean;
    Pad_Plus:boolean;
    Pad_Minus:boolean;
    Pad_Slash:boolean;
    Pad_Enter:boolean;
    Pad_period:boolean;
    Pad_0:boolean;
    Pad_1:boolean;
    Pad_2:boolean;
    Pad_3:boolean;
    Pad_4:boolean;
    Pad_5:boolean;
    Pad_6:boolean;
    Pad_7:boolean;
    Pad_8:boolean;
    Pad_9:boolean;

    CallBiosHandler:boolean;
    BiosKeyboardHandler:procedure;
procedure KeyboardHandler(Flags, CS, IP, AX, BX, CX, DX,
                          SI, DI, DS, ES, BP: Word);interrupt;
procedure KeysOn;
procedure KeysOff;
implementation
{컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴}
procedure KeysOn;
begin
CallBIOSHandler := false;
GetIntVec(KEYBOARDINTR, @BIOSKeyboardHandler);
SetIntVec(KEYBOARDINTR, Addr(KeyboardHandler));
end;
{컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴}
procedure KeysOff;
begin
SetIntVec(KEYBOARDINTR, @BiosKeyboardHandler);
end;
{컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴}
{$F+}
procedure KeyboardHandler(Flags, CS, IP, AX, BX, CX, DX,
                          SI, DI, DS, ES, BP: Word);{interrupt;}
var key : byte;
begin
  key := Port[KEYBOARDPORT];
  case key of
    0+  1: Key_esc:=true;
  128+  1: Key_esc:=false;
    0+  2: Key_1:=true;
  128+  2: Key_1:=false;
    0+  3: Key_2:=true;
  128+  3: Key_2:=false;
    0+  4: Key_3:=true;
  128+  4: Key_3:=false;
    0+  5: Key_4:=true;
  128+  5: Key_4:=false;
    0+  6: Key_5:=true;
  128+  6: Key_5:=false;
    0+  7: Key_6:=true;
  128+  7: Key_6:=false;
    0+  8: Key_7:=true;
  128+  8: Key_7:=false;
    0+  9: Key_8:=true;
  128+  9: Key_8:=false;
    0+ 10: Key_9:=true;
  128+ 10: Key_9:=false;
    0+ 11: Key_0:=true;
  128+ 11: Key_0:=false;
    0+ 12: Key_minusunderscore:=true;
  128+ 12: Key_minusunderscore:=false;
    0+ 13: Key_equalplus:=true;
  128+ 13: Key_equalplus:=false;
    0+ 14: Key_backspace:=true;
  128+ 14: Key_backspace:=false;
    0+ 15: Key_tab:=true;
  128+ 15: Key_tab:=false;
    0+ 16: Key_Q:=true;
  128+ 16: Key_Q:=false;
    0+ 17: Key_W:=true;
  128+ 17: Key_W:=false;
    0+ 18: Key_E:=true;
  128+ 18: Key_E:=false;
    0+ 19: Key_R:=true;
  128+ 19: Key_R:=false;
    0+ 20: Key_T:=true;
  128+ 20: Key_T:=false;
    0+ 21: Key_Y:=true;
  128+ 21: Key_Y:=false;
    0+ 22: Key_U:=true;
  128+ 22: Key_U:=false;
    0+ 23: Key_I:=true;
  128+ 23: Key_I:=false;
    0+ 24: Key_O:=true;
  128+ 24: Key_O:=false;
    0+ 25: Key_P:=true;
  128+ 25: Key_P:=false;
    0+ 26: Key_leftbrace:=true;
  128+ 26: Key_leftbrace:=false;
    0+ 27: Key_rightbrace:=true;
  128+ 27: Key_rightbrace:=false;
    0+ 28: Key_enter:=true;
  128+ 28: Key_enter:=false;
    0+ 29: Key_leftctrl:=true;
  128+ 29: Key_leftctrl:=false;
    0+ 30: Key_A:=true;
  128+ 30: Key_A:=false;
    0+ 31: Key_S:=true;
  128+ 31: Key_S:=false;
    0+ 32: Key_D:=true;
  128+ 32: Key_D:=false;
    0+ 33: Key_F:=true;
  128+ 33: Key_F:=false;
    0+ 34: Key_G:=true;
  128+ 34: Key_G:=false;
    0+ 35: Key_H:=true;
  128+ 35: Key_H:=false;
    0+ 36: Key_J:=true;
  128+ 36: Key_J:=false;
    0+ 37: Key_K:=true;
  128+ 37: Key_K:=false;
    0+ 38: Key_L:=true;
  128+ 38: Key_L:=false;
    0+ 39: Key_twopoints:=true;
  128+ 39: Key_twopoints:=false;
    0+ 40: Key_quote:=true;
  128+ 40: Key_quote:=false;
    0+ 41: Key_tilde:=true;
  128+ 41: Key_tilde:=false;
    0+ 42: Key_leftshift:=true;
  128+ 42: Key_leftshift:=false;
    0+ 44: Key_Z:=true;
  128+ 44: Key_Z:=false;
    0+ 45: Key_X:=true;
  128+ 45: Key_X:=false;
    0+ 46: Key_C:=true;
  128+ 46: Key_C:=false;
    0+ 47: Key_V:=true;
  128+ 47: Key_V:=false;
    0+ 48: Key_B:=true;
  128+ 48: Key_B:=false;
    0+ 49: Key_N:=true;
  128+ 49: Key_N:=false;
    0+ 50: Key_M:=true;
  128+ 50: Key_M:=false;
    0+ 51: Key_period:=true;
  128+ 51: Key_period:=false;
    0+ 52: Key_comma:=true;
  128+ 52: Key_comma:=false;
    0+ 53: Key_slash:=true;
  128+ 53: Key_slash:=false;
    0+ 54: Key_rightshift:=true;
  128+ 54: Key_rightshift:=false;
    0+ 55: Pad_mul:=true;
  128+ 55: Pad_mul:=false;
    0+ 56: Key_leftalt:=true;
  128+ 56: Key_leftalt:=false;
    0+ 57: Key_spacebar:=true;
  128+ 57: Key_spacebar:=false;
    0+ 58: Key_capslock:=true;
  128+ 58: Key_capslock:=false;
    0+ 59: Key_F1:=true;
  128+ 59: Key_F1:=false;
    0+ 60: Key_F2:=true;
  128+ 60: Key_F2:=false;
    0+ 61: Key_F3:=true;
  128+ 61: Key_F3:=false;
    0+ 62: Key_F4:=true;
  128+ 62: Key_F4:=false;
    0+ 63: Key_F5:=true;
  128+ 63: Key_F5:=false;
    0+ 64: Key_F6:=true;
  128+ 64: Key_F6:=false;
    0+ 65: Key_F7:=true;
  128+ 65: Key_F7:=false;
    0+ 66: Key_F8:=true;
  128+ 66: Key_F8:=false;
    0+ 67: Key_F9:=true;
  128+ 67: Key_F9:=false;
    0+ 68: Key_F10:=true;
  128+ 68: Key_F10:=false;
    0+ 69: Key_numlock:=true;
  128+ 69: Key_numlock:=false;
    0+ 70: Key_scrolllock:=true;
  128+ 70: Key_scrolllock:=false;
    0+ 71: Pad_7:=true;
  128+ 71: Pad_7:=false;
    0+ 72: Pad_8:=true;
  128+ 72: Pad_8:=false;
    0+ 73: Pad_9:=true;
  128+ 73: Pad_9:=false;
    0+ 74: Pad_minus:=true;
  128+ 74: Pad_minus:=false;
    0+ 75: Pad_4:=true;
  128+ 75: Pad_4:=false;
    0+ 76: Pad_5:=true;
  128+ 76: Pad_5:=false;
    0+ 77: Pad_6:=true;
  128+ 77: Pad_6:=false;
    0+ 78: Pad_plus:=true;
  128+ 78: Pad_plus:=false;
    0+ 79: Pad_1:=true;
  128+ 79: Pad_1:=false;
    0+ 80: Pad_2:=true;
  128+ 80: Pad_2:=false;
    0+ 81: Pad_3:=true;
  128+ 81: Pad_3:=false;
    0+ 82: Pad_0:=true;
  128+ 82: Pad_0:=false;
    0+ 83: Pad_period:=true;
  128+ 83: Pad_period:=false;
    0+ 84: Key_F11:=true;
  128+ 84: Key_F11:=false;
    0+ 85: Key_F12:=true;
  128+ 85: Key_F12:=false;
  end;
  if CallBIOSHandler then
    begin
      asm pushf end;
      BIOSKeyboardHandler;
    end
  else Port[$20] := $20;
end;
{컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴}
begin
end.
